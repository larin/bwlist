<?php
// $Id$

function bwlist_init() {
  $p = drupal_get_path('module', 'bwlist');
  drupal_add_css($p.'/bwlist.css');
//  db_query('SET GLOBAL group_concat_max_len=1024*1024');
}

function bwlist_menu() {
  return array (
    'bwlist' => array('title' => t('Black white list'), 'page callback' => 'bwlist', 'access arguments' =>  array('access content')),
  );
}

function bwlist_select($u) {
  Global $user;
  static $bw;
  if (!isset($bw) || !isset($bw[$u])) {
    $bw[$u] = db_select('bwlist')->fields('bwlist', ['bw'])->condition('uid', $user->uid)->condition('uid2', $u)->execute()->fetchField();
  }	
  return $bw[$u];  
}

function bwlist_icons($u, $usetext = '') {
  Global $user;
  if (!$user->uid || !$u) return '';
  $icon1 = l("<div class=bw1></div>", "bwlist/black/$u", array('html' => TRUE));
  $icon2 = l("<div class=bw2></div>", "bwlist/white/$u", array('html' => TRUE));
  $icon3 = l("<div class=bw3></div>", "bwlist/clean/$u", array('html' => TRUE));
  $bw = bwlist_select($u);
  if ($bw == 'b') return $icon3.$icon2;
  if ($bw == 'w') return $icon1.$icon3;
  return $icon1.$icon2;
}  

function bwlist_mode() {
  Global $user;
  if (!$u = $user->uid) return '';
  if (($mode = apc_fetch("bwmode$u")) === false)
    apc_store("bwmode$u", $mode = bwlist_select(0));	  
  return $mode;
}  

function bwlist_status($c) {
  Global $user;
  if (!$user->uid) return '';
  return bwlist_mode();
  return !bwlist_select(-$c);
}

/*
* Return TRUE if curren user can see content class $c from the user $u2
*/

function bwlist_see($u2, $c = 0) {
  Global $user;
  if (!$user->uid || !$u2) return TRUE;
  $mode = bwlist_mode();
  if (!$mode) return TRUE;
  if ($c AND bwlist_status($c)) return TRUE;
  $status = db_query("SELECT bw FROM {bwlist} WHERE uid = ? AND uid2 = ?", [$user->uid, $u2])->fetchField();
  if ($mode == 'b' and $status == 'b') return FALSE;
  if ($mode == 'w' and $status != 'w') return FALSE;
  return TRUE;
}

function bwlist($action = '', $u2 = 0) {
  Global $user;
  $u = $user->uid; //Current user
  if (!$u) return t('No service for anonimous, sorry');
  
  if ($u2 > 0) {
    switch ($action) {
      case 'on':
        db_query("INSERT INTO {bwlist} (uid, uid2, bw) VALUES(?, ?, 1) ON DUPLICATE KEY UPDATE bw=1",[$u, -$u2]);
		apc_delete("bw$u");
      break;
      case 'off':
        db_query('DELETE FROM {bwlist} WHERE uid = ? AND uid2 = ?',[ $u, -$u2]);
		apc_delete("bw$u");
      break;
      case 'black':
      case 'white': 
        db_query("INSERT INTO {bwlist} (uid, uid2, bw) VALUES(?, ?, ?) ON DUPLICATE KEY UPDATE bw=?",[$u, $u2, $action[0], $action[0]]);
		apc_delete("bw$u");
      break;
      case 'clean':
        db_query("DELETE FROM {bwlist} WHERE uid = ? AND uid2 = ?", [$u, $u2]);
		apc_delete("bw$u");
      break;
      case 'show':
        drupal_set_title("Чёрно-белый список пользователя ".db_query("SELECT name FROM users WHERE uid = ? OR name = ?", [$u2, $u2])->fetchField());
        $u = $u2;
      break;
    }
  }
  $legend = '';
  if ($action == 'use') {
    db_query("DELETE FROM {bwlist} WHERE uid = $u AND uid2 = 0"); 
	apc_delete("bwmode$u");
    switch ($u2) {
      case 'white':
        if (arg(3) != 'white' && !db_query("SELECT uid2 FROM bwlist WHERE uid2 AND uid=$u AND bw='w' LIMIT 1")->fetchField()) {
          $legend .= "<h2 style='color:red;margin:20px 0px'>Не стоит включать белый список до выбора приятных пользователей - заблокируется всё вообще.</h2>
          Если это то, что нужно - <a href=/bwlist/use/white/white>включить пустой белый список</a><br><br>";
          break;
        }  
      case 'black':
        db_query("INSERT INTO {bwlist} (uid, uid2, bw) VALUES(?, 0, ?)", [$u, $u2[0]]);
      break;  
    }
  }

  $path = '/img';
  $legend .= '<h2>'.t('Icon value:').'</h2>';
  $legend .= "<img src='$path/user-option-remove.png' border=0> ".t('Add to the black list');
  $legend .= "<br><img src='$path/user-option-add.png' border=0> ".t('Add to the white list');
  $legend .= "<br><img src='$path/user-plain-blue.png' border=0> ".t('Delete from any list');
/*  $legend .= '<BR><BR><h2>'.t('Filter:').'</h2>';
  $secnames = array (1 => t('Blog/forum posts'), 2 => t('Comments'), 3 => t('Впечатления о книгах'));
  for ($i = 1; $i <= 3; $i++) {
    $legend .= '<b>';
    $legend .= !bwlist_status($i) ? "<a href=/bwlist/off/$i>(".t('Switch OFF for') : "<a href=/bwlist/on/$i>(".t('Switch ON for');
    $legend .= ")</a></b> ".$secnames[$i]."<BR>\n";  
  }    
*/  $list = [];
  foreach(db_query("SELECT uid2, bw FROM {bwlist} WHERE uid = $u AND uid2 > 0") as $data) {
    $u2 = $data->uid2;
    $list[$data->bw] = ($list[$data->bw] ?? '').bwlist_icons($u2).theme('username',["account" => user_load($u2)]).'<br>'; 
  }
  if (empty($list['b'])) $list['b'] = t('Empty');
  if (empty($list['w'])) $list['w'] = t('Empty');
  if ($u == $user->uid) {
    $mode = db_query("SELECT bw FROM {bwlist} WHERE uid = $u AND uid2 = 0")->fetchField();
    if ($mode != 'w') $usew = ' '.l(t('(Switch ON)'), 'bwlist/use/white'); else $usew = ' '.l(t('(Switch OFF)'), 'bwlist/use/off');
    if ($mode != 'b') $useb = ' '.l(t('(Switch ON)'), 'bwlist/use/black'); else $useb = ' '.l(t('(Switch OFF)'), 'bwlist/use/off');
  }  
  return $legend.
  '<div class=fattablewrap><table><tr><th>'.t('Белый список').$usew.'<th>'.t('Чёрный список').$useb.
  "<tr><td valign=top>".$list['w']."<td valign=top>".$list['b']."</table></div>";
}

function bwlist_makewhere($id, $and = ' AND') {
  Global $user;
  if (!($u = $user->uid) || (!$mode = bwlist_mode())) return '1';
  if (($bl = apc_fetch("bw$u$mode")) === false) 
    apc_store("bw$u", $bl = db_query("SELECT GROUP_CONCAT(uid2) FROM {bwlist} WHERE uid = ? AND uid2 > 0 AND bw = '$mode'", [$u])->fetchField());
  if ($mode == 'b') return $bl ?  " $id NOT IN($bl) $and " : '';
  if ($mode == 'w') return $bl ?  " $id IN($bl) $and " : '';
}

function bwlist_query_alter($query) {
  Global $user;
  if (!$mode = bwlist_mode()) return;
  $field = $table = '';
  
  foreach($query->getTables() as $t) {
    $table = $t['alias'];
    break;
  }	
  foreach($query->getFields() as $f) {
    $field = $f['field'];
    break;
  }	
  $w = '1';
  if ($field == 'nid' AND bwlist_status(1)) {
    if ($mode == 'w') {
      if ($table == 'nc') $query->join('bwlist', 'bw', 'nc.last_comment_uid=bw.uid2');
      else $query->join('bwlist', 'bw', 'n.uid=bw.uid2');
      $query->condition('bw.uid', $user->uid);
    } elseif ($mode == 'b') {
      if ($table == 'nc') $w = bwlist_makewhere('last_comment_uid', '');
	  elseif ($table == 't') $w = '';
      else $w = bwlist_makewhere('n.uid', '');
	}
  }	
  if ($field == 'cid' AND bwlist_status(2)) {
    if ($mode == 'b') {
      $w = bwlist_makewhere("$table.uid", '');
    } elseif ($mode == 'w') {
      $query->join('bwlist', 'bw', "$table.uid=bw.uid2");
      $query->condition('bw.uid', $user->uid);
    }
  }
  if ($w) $query->where($w);
}

function bwlist_db_rewrite_sql($query, $primary_table, $primary_field, $args) {
  Global $user;
  $mode = bwlist_mode();
  if ($mode) {
    if ($primary_field == 'nid' AND bwlist_status(1)) {
      if ($mode == 'w') {
        if ($primary_table == 'nc') $sql['join'] = 'JOIN {bwlist} ON (nc.last_comment_uid=bwlist.uid2)';
        else $sql['join'] = 'JOIN {bwlist} ON (n.uid=bwlist.uid2)';
        $sql['where'] = "bwlist.uid = $user->uid";
      }
      if ($mode == 'b') {
        if ($primary_table == 'nc') $sql['where'] = bwlist_makewhere('last_comment_uid', '');
        else $sql['where'] = bwlist_makewhere('n.uid', '');
      }
    }
    if ($primary_field == 'cid' AND bwlist_status(2)) {
      if ($mode == 'b') {
        $sql['where'] = bwlist_makewhere('c.uid', '');
      }  
      if ($mode == 'w') {
        $sql['join'] = 'JOIN {bwlist} ON (c.uid=bwlist.uid2)';
        $sql['where'] = "bwlist.uid = $user->uid";
      }
    }
    return $sql;
  }  
}

function bwlist_user($op, &$edit, &$u) {
  Global $user;
  if ($op != 'view') return;
  if (db_query("SELECT uid FROM {bwlist} WHERE uid = ? LIMIT 1",[ $u->uid])->fetchField())
    $r = "<a href=/bwlist/show/$u->uid>".t('Отмеченные пользователи').'</a>';
  else 
    $r = "не использует";
  if ($u->uid != $user->uid) $r .= bwlist_icons($u->uid, usetext);
  $u->content['summary']['bwlist'] =  array('#type' => 'user_profile_item', '#title' => t('Черно-белый список'), '#markup' => $r);
}
